{"ast":null,"code":"var _jsxFileName = \"/Users/cbatsoula/_exp_/test-waveson-client/src/containers/Show.js\";\nimport React from 'react';\nimport BeachDetails from './BeachDetails';\nimport { Link } from 'react-router-dom';\nimport Banner from '../components/Banner';\nimport NoteStuff from './NoteStuff'; // import why from './why.html';\n\nconst WORLD_API_KEY = \"\".concat(process.env.REACT_APP_WORLD_API_KEY);\n\nclass Show extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      stats: [],\n      today: null\n    };\n\n    this.renderToday = () => {\n      let todayWeather = this.state.stats.data.weather[0];\n      this.setState({\n        today: todayWeather\n      }, () => {\n        console.log(this.state.today);\n      });\n    };\n\n    this.chitCheckin = () => {\n      let thisOne = this.props.allBeaches.find(beach => {\n        return beach.name === this.props.currentBeach.name;\n      });\n      console.log(\"save beach\", thisOne);\n      let favCheck = this.props.beachSaveData;\n      let count;\n\n      for (count = 0; count < favCheck.length; count++) {\n        if (favCheck[count] === thisOne.id) {\n          return true;\n        }\n      }\n    };\n\n    this.saveBeach = () => {\n      console.log(\"you got this!\", this.props.currentUser, this.props.currentBeach);\n      let thisOne = this.props.allBeaches.find(beach => {\n        return beach.name === this.props.currentBeach.name;\n      });\n      console.log(\"save beach\", thisOne);\n      let favCheck = this.props.beachSaveData;\n      console.log(\"fav check\", chitCheckin(), this.props.beachSaveData);\n      this.chitCheckin();\n      debugger; // if (thisOne){\n      //   fetch('http://localhost:3000/favs', {\n      //     method: \"POST\",\n      //     headers: {\n      //       \"Content-Type\": \"application/json\",\n      //       \"Accept\": \"application/json\",\n      //     },\n      //     body: JSON.stringify({\n      //       user_id: this.props.currentUser.id,\n      //       beach_id: thisOne.id,\n      //     })\n      //   })\n      //     .then(r => r.json())\n      //     .then(console.log)\n      // }\n    };\n\n    this.removeBeach = () => {\n      console.log(\"remove\", this.props.beachSaveData);\n      let userID = this.props.currentUser.id;\n      let thisOne = this.props.allBeaches.find(beach => {\n        return beach.name === this.props.currentBeach.name;\n      });\n      let favID = this.props.beachSaveData.find(fav => {\n        return fav.user_id === userID && fav.beach_id === thisOne.id; // console.log(\"remove favID\", favID)\n      });\n      fetch(\"http://localhost:3000/favs/\".concat(favID.id), {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Methods\": \"DELETE\",\n          \"Access-Control-Allow-Origin\": \"http://localhost\" //   \"Accept\": \"application/json\",\n\n        }\n      }).then(r => r.json()).then(console.log);\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.worldweatheronline.com/premium/v1/marine.ashx?tide=yes&key=a1f576b5405f4059a00170203190508&format=json&q=\".concat(this.props.currentBeach.geometry.location.lat, \",\").concat(this.props.currentBeach.geometry.location.lng)).then(r => r.json()).then(data => {\n      this.setState({\n        stats: data\n      }, () => {\n        // console.log(this.state.stats.data.weather[0])\n        this.renderToday();\n      });\n    });\n  }\n\n  //   console.log(\"you got this!\", this.props.currentUser, this.props.currentBeach)\n  //   let thisOne = this.props.allBeaches.find(beach => {\n  //     return beach.name === this.props.currentBeach.name\n  //   })\n  //   // console.log(\"save beach\", thisOne)\n  //\n  render() {\n    // console.log(\"SHOW STATE\", this.state)\n    // console.log(\"user\", this.props.currentUser)\n    // console.log(\"all beaches from api\", this.props.allBeaches)\n    return React.createElement(\"div\", {\n      className: \"Show\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Show-Details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, this.props.currentBeach.name, React.createElement(\"button\", {\n      onClick: this.saveBeach,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"SAVE\"), React.createElement(\"button\", {\n      onClick: this.removeBeach,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"REMOVE\")), this.state.today ? React.createElement(BeachDetails, {\n      today: this.state.today,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }) : null, React.createElement(Banner, {\n      title: \"Notes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(NoteStuff, {\n      allBeaches: this.props.allBeaches,\n      currentUser: this.props.currentUser,\n      currentBeach: this.props.currentBeach,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Show;","map":{"version":3,"sources":["/Users/cbatsoula/_exp_/test-waveson-client/src/containers/Show.js"],"names":["React","BeachDetails","Link","Banner","NoteStuff","WORLD_API_KEY","process","env","REACT_APP_WORLD_API_KEY","Show","Component","state","stats","today","renderToday","todayWeather","data","weather","setState","console","log","chitCheckin","thisOne","props","allBeaches","find","beach","name","currentBeach","favCheck","beachSaveData","count","length","id","saveBeach","currentUser","removeBeach","userID","favID","fav","user_id","beach_id","fetch","method","headers","then","r","json","componentDidMount","geometry","location","lat","lng","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport BeachDetails from './BeachDetails';\nimport { Link } from 'react-router-dom';\nimport Banner from '../components/Banner';\nimport NoteStuff from './NoteStuff';\n// import why from './why.html';\n\n  const WORLD_API_KEY = `${process.env.REACT_APP_WORLD_API_KEY}`\n\nclass Show extends React.Component {\n  state = {\n    stats: [],\n    today: null,\n  }\n\n  componentDidMount() {\n\n    fetch(`https://api.worldweatheronline.com/premium/v1/marine.ashx?tide=yes&key=a1f576b5405f4059a00170203190508&format=json&q=${this.props.currentBeach.geometry.location.lat},${this.props.currentBeach.geometry.location.lng}`)\n      .then( r => r.json() )\n      .then( data => {\n        this.setState({\n          stats: data\n        }, () => {\n          // console.log(this.state.stats.data.weather[0])\n          this.renderToday()\n        })\n      })\n  }\n\n  renderToday = () => {\n    let todayWeather = this.state.stats.data.weather[0]\n    this.setState({\n      today: todayWeather\n    }, () => {console.log(this.state.today)})\n  }\n\n  chitCheckin = () => {\n    let thisOne = this.props.allBeaches.find(beach => {\n      return beach.name === this.props.currentBeach.name\n    })\n    console.log(\"save beach\", thisOne)\n    let favCheck = this.props.beachSaveData\n    let count;\n\n      for (count = 0; count < favCheck.length; count++) {\n        if (favCheck[count] === thisOne.id) {\n          return true\n        }\n      }\n\n  }\n\n  saveBeach = () => {\n    console.log(\"you got this!\", this.props.currentUser, this.props.currentBeach)\n\n    let thisOne = this.props.allBeaches.find(beach => {\n      return beach.name === this.props.currentBeach.name\n    })\n    console.log(\"save beach\", thisOne)\n    let favCheck = this.props.beachSaveData\n    console.log(\"fav check\", chitCheckin(), this.props.beachSaveData)\n    this.chitCheckin()\n    debugger;\n    // if (thisOne){\n    //   fetch('http://localhost:3000/favs', {\n    //     method: \"POST\",\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //       \"Accept\": \"application/json\",\n    //     },\n    //     body: JSON.stringify({\n    //       user_id: this.props.currentUser.id,\n    //       beach_id: thisOne.id,\n    //     })\n    //   })\n    //     .then(r => r.json())\n    //     .then(console.log)\n    // }\n  }\n\n  removeBeach = () => {\n    console.log(\"remove\", this.props.beachSaveData )\n    let userID = this.props.currentUser.id\n    let thisOne = this.props.allBeaches.find(beach => {\n      return beach.name === this.props.currentBeach.name\n    })\n    let favID = this.props.beachSaveData.find(fav => {\n      return fav.user_id === userID && fav.beach_id === thisOne.id\n        // console.log(\"remove favID\", favID)\n      })\n\n      fetch(`http://localhost:3000/favs/${favID.id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Methods\": \"DELETE\",\n          \"Access-Control-Allow-Origin\": \"http://localhost\"\n        //   \"Accept\": \"application/json\",\n        },\n      })\n        .then(r => r.json())\n        .then(console.log)\n    }\n  //   console.log(\"you got this!\", this.props.currentUser, this.props.currentBeach)\n  //   let thisOne = this.props.allBeaches.find(beach => {\n  //     return beach.name === this.props.currentBeach.name\n  //   })\n  //   // console.log(\"save beach\", thisOne)\n  //\n\n  render () {\n    // console.log(\"SHOW STATE\", this.state)\n    // console.log(\"user\", this.props.currentUser)\n    // console.log(\"all beaches from api\", this.props.allBeaches)\n    return (\n      <div className=\"Show\">\n\n        <div className=\"Show-Details\">\n          {this.props.currentBeach.name}\n\n          <button onClick={this.saveBeach}>SAVE</button>\n          <button onClick={this.removeBeach}>REMOVE</button>\n\n        </div>\n        {\n          this.state.today\n          ?\n          <BeachDetails today={this.state.today}/>\n          :\n          null\n        }\n        <Banner title={\"Notes\"}/>\n        <NoteStuff allBeaches={this.props.allBeaches} currentUser={this.props.currentUser} currentBeach={this.props.currentBeach}/>\n      </div>\n    )\n  }\n}\n\nexport default Show;\n"]},"metadata":{},"sourceType":"module"}