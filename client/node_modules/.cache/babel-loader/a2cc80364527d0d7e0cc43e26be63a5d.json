{"ast":null,"code":"var _jsxFileName = \"/Users/cbatsoula/_exp_/test-waveson-client/src/containers/Show.js\";\nimport React from 'react';\nimport BeachDetails from './BeachDetails';\nimport { Link } from 'react-router-dom';\nimport Banner from '../components/Banner';\nimport NoteStuff from './NoteStuff'; // import why from './why.html';\n\nconst WORLD_API_KEY = \"\".concat(process.env.REACT_APP_WORLD_API_KEY);\n\nclass Show extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      stats: [],\n      today: null\n    };\n\n    this.renderToday = () => {\n      let todayWeather = this.state.stats.data.weather[0];\n      this.setState({\n        today: todayWeather\n      }, () => {\n        console.log(this.state.today);\n      });\n    };\n\n    this.saveBeach = () => {\n      console.log(\"you got this!\", this.props.currentUser, this.props.currentBeach);\n      let thisOne = this.props.allBeaches.find(beach => {\n        return beach.name === this.props.currentBeach.name;\n      });\n      console.log(\"save beach\", thisOne);\n      let favCheck = this.props.beachSaveData.find(beach => {\n        return beach.id === thisOne.id;\n      });\n      console.log(\"wut\", thisOne && favCheck);\n      debugger;\n\n      if (thisOne && favCheck) {\n        fetch('http://localhost:3000/favs', {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\"\n          },\n          body: JSON.stringify({\n            user_id: this.props.currentUser.id,\n            beach_id: thisOne.id\n          })\n        }).then(r => r.json()).then(console.log);\n      }\n    };\n\n    this.removeBeach = () => {\n      console.log(\"remove\", this.props.beachSaveData);\n      let userID = this.props.currentUser.id;\n      let thisOne = this.props.allBeaches.find(beach => {\n        return beach.name === this.props.currentBeach.name;\n      });\n      let favID = this.props.beachSaveData.find(fav => {\n        return fav.user_id === userID && fav.beach_id === thisOne.id; // console.log(\"remove favID\", favID)\n      });\n      fetch(\"http://localhost:3000/favs/\".concat(favID.id), {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Methods\": \"DELETE\",\n          \"Access-Control-Allow-Origin\": \"http://localhost\" //   \"Accept\": \"application/json\",\n\n        }\n      }).then(r => r.json()).then(console.log);\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.worldweatheronline.com/premium/v1/marine.ashx?tide=yes&key=a1f576b5405f4059a00170203190508&format=json&q=\".concat(this.props.currentBeach.geometry.location.lat, \",\").concat(this.props.currentBeach.geometry.location.lng)).then(r => r.json()).then(data => {\n      this.setState({\n        stats: data\n      }, () => {\n        // console.log(this.state.stats.data.weather[0])\n        this.renderToday();\n      });\n    });\n  }\n\n  //   console.log(\"you got this!\", this.props.currentUser, this.props.currentBeach)\n  //   let thisOne = this.props.allBeaches.find(beach => {\n  //     return beach.name === this.props.currentBeach.name\n  //   })\n  //   // console.log(\"save beach\", thisOne)\n  //\n  render() {\n    // console.log(\"SHOW STATE\", this.state)\n    // console.log(\"user\", this.props.currentUser)\n    // console.log(\"all beaches from api\", this.props.allBeaches)\n    return React.createElement(\"div\", {\n      className: \"Show\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Show-Details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.props.currentBeach.name, React.createElement(\"button\", {\n      onClick: this.saveBeach,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"SAVE\"), React.createElement(\"button\", {\n      onClick: this.removeBeach,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"REMOVE\")), this.state.today ? React.createElement(BeachDetails, {\n      today: this.state.today,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }) : null, React.createElement(Banner, {\n      title: \"Notes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(NoteStuff, {\n      allBeaches: this.props.allBeaches,\n      currentUser: this.props.currentUser,\n      currentBeach: this.props.currentBeach,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Show;","map":{"version":3,"sources":["/Users/cbatsoula/_exp_/test-waveson-client/src/containers/Show.js"],"names":["React","BeachDetails","Link","Banner","NoteStuff","WORLD_API_KEY","process","env","REACT_APP_WORLD_API_KEY","Show","Component","state","stats","today","renderToday","todayWeather","data","weather","setState","console","log","saveBeach","props","currentUser","currentBeach","thisOne","allBeaches","find","beach","name","favCheck","beachSaveData","id","fetch","method","headers","body","JSON","stringify","user_id","beach_id","then","r","json","removeBeach","userID","favID","fav","componentDidMount","geometry","location","lat","lng","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport BeachDetails from './BeachDetails';\nimport { Link } from 'react-router-dom';\nimport Banner from '../components/Banner';\nimport NoteStuff from './NoteStuff';\n// import why from './why.html';\n\n  const WORLD_API_KEY = `${process.env.REACT_APP_WORLD_API_KEY}`\n\nclass Show extends React.Component {\n  state = {\n    stats: [],\n    today: null,\n  }\n\n  componentDidMount() {\n\n    fetch(`https://api.worldweatheronline.com/premium/v1/marine.ashx?tide=yes&key=a1f576b5405f4059a00170203190508&format=json&q=${this.props.currentBeach.geometry.location.lat},${this.props.currentBeach.geometry.location.lng}`)\n      .then( r => r.json() )\n      .then( data => {\n        this.setState({\n          stats: data\n        }, () => {\n          // console.log(this.state.stats.data.weather[0])\n          this.renderToday()\n        })\n      })\n  }\n\n  renderToday = () => {\n    let todayWeather = this.state.stats.data.weather[0]\n    this.setState({\n      today: todayWeather\n    }, () => {console.log(this.state.today)})\n  }\n\n\n  saveBeach = () => {\n    console.log(\"you got this!\", this.props.currentUser, this.props.currentBeach)\n\n    let thisOne = this.props.allBeaches.find(beach => {\n      return beach.name === this.props.currentBeach.name\n    })\n    console.log(\"save beach\", thisOne)\n    let favCheck = this.props.beachSaveData.find(beach => {\n      return beach.id === thisOne.id})\n    console.log(\"wut\", thisOne && favCheck)\n    debugger;\n    if (thisOne && favCheck){\n      fetch('http://localhost:3000/favs', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n        },\n        body: JSON.stringify({\n          user_id: this.props.currentUser.id,\n          beach_id: thisOne.id,\n        })\n      })\n        .then(r => r.json())\n        .then(console.log)\n    }\n  }\n\n  removeBeach = () => {\n    console.log(\"remove\", this.props.beachSaveData )\n    let userID = this.props.currentUser.id\n    let thisOne = this.props.allBeaches.find(beach => {\n      return beach.name === this.props.currentBeach.name\n    })\n    let favID = this.props.beachSaveData.find(fav => {\n      return fav.user_id === userID && fav.beach_id === thisOne.id\n        // console.log(\"remove favID\", favID)\n      })\n\n      fetch(`http://localhost:3000/favs/${favID.id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Methods\": \"DELETE\",\n          \"Access-Control-Allow-Origin\": \"http://localhost\"\n        //   \"Accept\": \"application/json\",\n        },\n      })\n        .then(r => r.json())\n        .then(console.log)\n    }\n  //   console.log(\"you got this!\", this.props.currentUser, this.props.currentBeach)\n  //   let thisOne = this.props.allBeaches.find(beach => {\n  //     return beach.name === this.props.currentBeach.name\n  //   })\n  //   // console.log(\"save beach\", thisOne)\n  //\n\n  render () {\n    // console.log(\"SHOW STATE\", this.state)\n    // console.log(\"user\", this.props.currentUser)\n    // console.log(\"all beaches from api\", this.props.allBeaches)\n    return (\n      <div className=\"Show\">\n\n        <div className=\"Show-Details\">\n          {this.props.currentBeach.name}\n\n          <button onClick={this.saveBeach}>SAVE</button>\n          <button onClick={this.removeBeach}>REMOVE</button>\n\n        </div>\n        {\n          this.state.today\n          ?\n          <BeachDetails today={this.state.today}/>\n          :\n          null\n        }\n        <Banner title={\"Notes\"}/>\n        <NoteStuff allBeaches={this.props.allBeaches} currentUser={this.props.currentUser} currentBeach={this.props.currentBeach}/>\n      </div>\n    )\n  }\n}\n\nexport default Show;\n"]},"metadata":{},"sourceType":"module"}