{"ast":null,"code":"import _objectSpread from \"/Users/cbatsoula/_exp_/test-waveson-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/cbatsoula/_exp_/test-waveson-client/src/containers/NoteStuff.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport NoteCard from '../components/NoteCard';\nimport PhotoUpload from './PhotoUpload';\nimport { Image, Video, Transformation, CloudinaryContext } from 'cloudinary-react';\nimport cloudinary from 'cloudinary-react';\n\nclass NoteStuff extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      note: null,\n      allNotes: null,\n      oneNote: null,\n      select: false,\n      tag: null,\n      oneTag: null,\n      allTags: null,\n      photoInfo: null,\n      loading: false,\n      idkmydude: null\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      let thisOne = this.props.allBeaches.find(beach => {\n        return beach.name === this.props.currentBeach.name;\n      });\n\n      if (this.state.select) {\n        fetch(\"http://localhost:3000/notes/\".concat(this.state.oneNote.id), {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Access-Control-Allow-Methods\": \"PATCH\",\n            \"Access-Control-Allow-Origin\": \"http://localhost\"\n          },\n          body: JSON.stringify({\n            note: this.state.note,\n            user_id: this.props.currentUser.id,\n            beach_id: thisOne.id\n          })\n        }).then(r => r.json()).then(data => {\n          console.log(\"one review\", this.state.oneReview);\n          console.log(\"data\", data); //update one object in state array\n\n          let updatedReview = this.state.allNotes.map(note => {\n            if (note.id === this.state.oneNote.id) {\n              return this.state.oneNote;\n            } else {\n              return note;\n            }\n          });\n          this.setState({\n            note: \"\",\n            reviews: updatedReview,\n            select: false\n          });\n        });\n      } else {\n        this.postNotes();\n        this.postTags();\n      }\n    };\n\n    this.postTags = () => {\n      let thisOne = this.props.allBeaches.find(beach => {\n        return beach.name === this.props.currentBeach.name;\n      });\n      fetch(\"http://localhost:3000/tags\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          tag: this.state.tag,\n          user_id: this.props.currentUser.id,\n          beach_id: thisOne.id\n        })\n      }).then(res => res.json()).then(data => {\n        console.log(\"back from post tag\", data);\n        this.setState({\n          tag: \"\",\n          allTags: [...this.state.allTags, data]\n        }, () => {\n          console.log(\"POSTED TAG\", this.state.allTags);\n        });\n      });\n    };\n\n    this.postNotes = () => {\n      let thisOne = this.props.allBeaches.find(beach => {\n        return beach.name === this.props.currentBeach.name;\n      });\n      let thisPhoto = this.state.photoInfo[0].secure_url;\n      fetch(\"http://localhost:3000/notes\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          note: this.state.note,\n          user_id: this.props.currentUser.id,\n          beach_id: thisOne.id,\n          photo: thisPhoto\n        })\n      }).then(res => res.json()).then(data => {\n        console.log(\"back from post\", data);\n        this.setState({\n          note: \" \",\n          select: false,\n          allNotes: [data, ...this.state.allNotes]\n        }, () => {\n          this.fetchNotes();\n        } // , () => {this.postNoteTag()}\n        );\n        console.log(\"POSTED NOTE\", this.state.allNotes); // this.setState({\n        //   reviews: [...this.state.reviews, data],\n        //   select: false,\n        // })\n      });\n    };\n\n    this.fetchNotes = () => {\n      let thisOne = this.props.allBeaches.find(beach => {\n        return beach.name === this.props.currentBeach.name;\n      });\n      let userID = this.props.currentUser.id;\n      fetch('http://localhost:3000/notes').then(r => r.json()).then(stuff => {\n        let findFromNotes = stuff.filter(note => {\n          return note.beach_id === thisOne.id && note.user_id === userID;\n        }); // console.log(\"pls\", findFromNotes)\n        // debugger;\n\n        this.setState({\n          allNotes: findFromNotes\n        });\n      });\n    };\n\n    this.fetchTags = () => {\n      let thisOne = this.props.allBeaches.find(beach => {\n        return beach.name === this.props.currentBeach.name;\n      });\n      let userID = this.props.currentUser.id;\n      fetch('http://localhost:3000/tags').then(r => r.json()).then(stuff => {\n        let findFromTags = stuff.filter(tag => {\n          return tag.beach_id === thisOne.id && tag.user_id === userID;\n        });\n        this.setState({\n          allTags: findFromTags\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        oneNote: _objectSpread({}, this.state.oneNote, {\n          [event.target.name]: event.target.value\n        }),\n        [event.target.name]: event.target.value,\n        oneTag: _objectSpread({}, this.state.oneTag, {\n          [event.target.name]: event.target.value\n        })\n      });\n    };\n\n    this.handleEdit = thing => {\n      console.log(\"one review\", thing, thing.id);\n      this.setState({\n        oneNote: thing,\n        select: true\n      });\n    };\n\n    this.handleDelete = thing => {\n      console.log(\"delete this review\", thing.id);\n      fetch(\"http://localhost:3000/notes/\".concat(thing.id), {\n        method: \"DELETE\"\n      }).then(r => r.json()).then(data => {\n        console.log(\"removed\", data);\n        var newItems = this.state.allNotes.filter(note => {\n          return note.id !== thing.id;\n        });\n        this.setState({\n          allNotes: newItems\n        });\n      });\n    };\n\n    this.renderNoteCards = () => {\n      return this.state.allNotes.map(note => {\n        return React.createElement(NoteCard, {\n          note: note,\n          key: note.id,\n          handleEdit: this.handleEdit,\n          handleDelete: this.handleDelete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.setShit = result => {\n      console.log(\"bro what\", result);\n      this.setState({\n        photoInfo: result,\n        loading: null,\n        idkmydude: \"Photo selected and ready to upload!\"\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchNotes();\n    this.fetchTags();\n  }\n\n  uploadWidget() {\n    this.setState({\n      loading: true\n    });\n    window.cloudinary.openUploadWidget({\n      cloud_name: 'dlybpe5za',\n      upload_preset: 'waveson'\n    }, (error, result) => {\n      console.log(result);\n\n      if (result) {\n        this.setShit(result);\n      }\n    });\n  } // <Image cloudName=\"dlybpe5za\" publicId=\"sample\" width=\"300\" crop=\"scale\" />\n\n\n  render() {\n    console.log(\"note\", this.state);\n    console.log(\"note props\", this.props);\n    return React.createElement(\"div\", {\n      className: \"Note-Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.uploadWidget.bind(this),\n      className: \"upload-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"ADD IMAGE\"), this.state.loading ? React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"Loading...\") : React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"Select\"), this.state.idkmydude ? this.state.idkmydude : null), React.createElement(\"form\", {\n      className: \"Note-Form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      onChange: this.handleChange,\n      name: \"note\",\n      value: this.state.oneNote ? this.state.oneNote.note : this.state.note,\n      rows: \"4\",\n      cols: \"50\",\n      type: \"text\",\n      placeholder: \"Start your entry here!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"tag\",\n      value: this.state.oneTag ? this.state.oneTag.tag : this.state.tag,\n      placeholder: \"tags\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    })), this.state.allNotes ? this.renderNoteCards() : null);\n  }\n\n}\n\nexport default NoteStuff;","map":{"version":3,"sources":["/Users/cbatsoula/_exp_/test-waveson-client/src/containers/NoteStuff.js"],"names":["React","Link","NoteCard","PhotoUpload","Image","Video","Transformation","CloudinaryContext","cloudinary","NoteStuff","Component","state","note","allNotes","oneNote","select","tag","oneTag","allTags","photoInfo","loading","idkmydude","handleSubmit","event","preventDefault","thisOne","props","allBeaches","find","beach","name","currentBeach","fetch","id","method","headers","body","JSON","stringify","user_id","currentUser","beach_id","then","r","json","data","console","log","oneReview","updatedReview","map","setState","reviews","postNotes","postTags","res","thisPhoto","secure_url","photo","fetchNotes","userID","stuff","findFromNotes","filter","fetchTags","findFromTags","handleChange","target","value","handleEdit","thing","handleDelete","newItems","renderNoteCards","setShit","result","componentDidMount","uploadWidget","window","openUploadWidget","cloud_name","upload_preset","error","render","bind"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport NoteCard from '../components/NoteCard';\nimport PhotoUpload from './PhotoUpload';\nimport {Image, Video, Transformation, CloudinaryContext} from 'cloudinary-react';\nimport cloudinary from 'cloudinary-react';\n\n\nclass NoteStuff extends React.Component {\n\n  state = {\n    note: null,\n    allNotes: null,\n    oneNote: null,\n    select: false,\n    tag: null,\n    oneTag: null,\n    allTags: null,\n    photoInfo: null,\n    loading: false,\n    idkmydude: null,\n  }\n\n\n  handleSubmit = event => {\n  event.preventDefault();\n\n\n  let thisOne = this.props.allBeaches.find(beach => {\n    return beach.name === this.props.currentBeach.name\n  })\n\n  if (this.state.select){\n    fetch(`http://localhost:3000/notes/${this.state.oneNote.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Methods\": \"PATCH\",\n        \"Access-Control-Allow-Origin\": \"http://localhost\"\n      },\n      body: JSON.stringify({\n        note: this.state.note,\n        user_id: this.props.currentUser.id,\n        beach_id: thisOne.id,\n       })\n    })\n      .then(r => r.json())\n      .then(data => {\n        console.log(\"one review\", this.state.oneReview)\n        console.log(\"data\", data)\n        //update one object in state array\n        let updatedReview = this.state.allNotes.map(note => {\n          if (note.id === this.state.oneNote.id){\n            return this.state.oneNote\n          } else {\n            return note\n          }\n        })\n        this.setState({\n          note: \"\",\n          reviews: updatedReview,\n          select: false,\n        })\n      })\n\n  } else {\n    this.postNotes()\n    this.postTags()\n    }\n  };\n\n  postTags = () => {\n    let thisOne = this.props.allBeaches.find(beach => {\n      return beach.name === this.props.currentBeach.name\n    })\n    fetch(`http://localhost:3000/tags`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        tag: this.state.tag,\n        user_id: this.props.currentUser.id,\n        beach_id: thisOne.id,\n      })\n    })\n      .then( res => res.json())\n      .then( data => {\n        console.log(\"back from post tag\", data)\n        this.setState({\n          tag: \"\",\n          allTags: [...this.state.allTags, data]\n        }, () => {console.log(\"POSTED TAG\", this.state.allTags)})\n      })\n  }\n\n  postNotes = () => {\n    let thisOne = this.props.allBeaches.find(beach => {\n      return beach.name === this.props.currentBeach.name\n    })\n    let thisPhoto = this.state.photoInfo[0].secure_url\n    fetch(\"http://localhost:3000/notes\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        note: this.state.note,\n        user_id: this.props.currentUser.id,\n        beach_id: thisOne.id,\n        photo: thisPhoto,\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(\"back from post\", data)\n        this.setState({\n          note: \" \",\n          select: false,\n          allNotes: [data, ...this.state.allNotes]\n        }, () => {this.fetchNotes()}\n        // , () => {this.postNoteTag()}\n       )\n        console.log(\"POSTED NOTE\", this.state.allNotes)\n\n        // this.setState({\n        //   reviews: [...this.state.reviews, data],\n        //   select: false,\n        // })\n      });\n  }\n\n\n\n  componentDidMount() {\n    this.fetchNotes()\n    this.fetchTags()\n  }\n\n  fetchNotes = () => {\n    let thisOne = this.props.allBeaches.find(beach => {\n      return beach.name === this.props.currentBeach.name\n    })\n    let userID = this.props.currentUser.id\n    fetch('http://localhost:3000/notes')\n      .then( r => r.json())\n      .then( stuff => {\n        let findFromNotes = stuff.filter( note => {\n          return note.beach_id === thisOne.id && note.user_id === userID})\n        // console.log(\"pls\", findFromNotes)\n        // debugger;\n\n        this.setState({\n          allNotes: findFromNotes\n        })\n\n      })\n  }\n  fetchTags = () => {\n    let thisOne = this.props.allBeaches.find(beach => {\n      return beach.name === this.props.currentBeach.name\n    })\n    let userID = this.props.currentUser.id\n    fetch('http://localhost:3000/tags')\n      .then( r => r.json())\n      .then( stuff => {\n        let findFromTags = stuff.filter( tag => {\n          return tag.beach_id === thisOne.id && tag.user_id === userID})\n\n        this.setState({\n          allTags: findFromTags\n        })\n\n      })\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      oneNote: {...this.state.oneNote, [event.target.name]: event.target.value},\n      [event.target.name]: event.target.value,\n      oneTag: {...this.state.oneTag, [event.target.name]: event.target.value},\n    });\n  };\n\n  handleEdit = (thing) => {\n  console.log(\"one review\", thing, thing.id)\n    this.setState({\n      oneNote: thing,\n      select: true\n    });\n\n  }\n\n  handleDelete = (thing) => {\n  console.log(\"delete this review\", thing.id)\n   fetch(`http://localhost:3000/notes/${thing.id}`, {\n     method: \"DELETE\",\n   })\n     .then( r => r.json())\n     .then( data => {\n       console.log(\"removed\", data)\n       var newItems = this.state.allNotes.filter((note) => {\n         return note.id !== thing.id});\n     this.setState({ allNotes: newItems });\n     })\n  }\n\n  renderNoteCards = () => {\n    return this.state.allNotes.map( note => {\n      return <NoteCard note={note} key={note.id} handleEdit={this.handleEdit} handleDelete={this.handleDelete} />\n    })\n  }\n\n  setShit = (result) => {\n    console.log(\"bro what\", result)\n    this.setState({\n      photoInfo: result,\n      loading: null,\n      idkmydude: \"Photo selected and ready to upload!\"\n\n    })\n  }\n\n  uploadWidget() {\n    this.setState({\n      loading: true,\n    })\n    window.cloudinary.openUploadWidget({ cloud_name: 'dlybpe5za', upload_preset: 'waveson'},\n        (error, result) => {\n            console.log(result);\n            if (result) {\n              this.setShit(result)\n            }\n\n        });\n      }\n\n      // <Image cloudName=\"dlybpe5za\" publicId=\"sample\" width=\"300\" crop=\"scale\" />\n  render () {\n    console.log(\"note\", this.state)\n    console.log(\"note props\", this.props)\n    return (\n      <div className=\"Note-Container\">\n            <div className=\"upload\">\n                <button onClick={this.uploadWidget.bind(this)} className=\"upload-button\">\n                    ADD IMAGE\n                </button>\n                {\n                  this.state.loading\n                  ?\n                  <h4>Loading...</h4>\n                  :\n                  <h4>Select</h4>\n                }\n                {\n                  this.state.idkmydude\n                  ?\n                  this.state.idkmydude\n                  :\n                  null\n                }\n            </div>\n\n        <form className=\"Note-Form\" onSubmit={this.handleSubmit}>\n          <br />\n          <textarea\n          onChange={this.handleChange}\n          name=\"note\"\n          value={this.state.oneNote ? this.state.oneNote.note : this.state.note}\n          rows=\"4\"\n          cols=\"50\"\n          type=\"text\"\n          placeholder=\"Start your entry here!\"/>\n          <input\n          onChange={this.handleChange}\n          name=\"tag\"\n          value={this.state.oneTag ? this.state.oneTag.tag : this.state.tag}\n          placeholder=\"tags\"/>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      {\n        this.state.allNotes\n        ?\n        this.renderNoteCards()\n        :\n        null\n      }\n\n      </div>\n    )\n  }\n}\nexport default NoteStuff\n"]},"metadata":{},"sourceType":"module"}