{"ast":null,"code":"var _jsxFileName = \"/Users/cbatsoula/_exp_/waveson/test-waveson-api/client/src/containers/AllNotes.js\";\nimport React from 'react';\nimport NoteCard from '../components/NoteCard';\nimport Banner from '../components/Banner';\nimport AllNotesFilter from './AllNotesFilter';\n\nclass AllNotes extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allNotes: null\n    };\n\n    this.renderNoteCards = () => {\n      return this.state.allNotes.map(note => {\n        return /*#__PURE__*/React.createElement(NoteCard, {\n          allBeaches: this.state.allBeaches,\n          note: note,\n          key: note.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 14\n          }\n        });\n      });\n    };\n\n    this.componentDidMount = () => {\n      console.log(\"allBeaches\", this.props); // let thisOne = this.props.allBeaches.find(beach => {\n      //   return beach.name === this.props.currentBeach.name\n      // })\n\n      let userID = this.props.currentUser.id;\n      console.log(\"userID\", userID);\n      fetch('/api/notes').then(r => r.json()).then(stuff => {\n        // let findFromNotes = stuff.filter( note => {\n        //   return note.beach_id === thisOne.id && note.user_id === userID})\n        let findFromNotes = stuff.filter(note => {\n          return note.user_id === userID;\n        });\n        console.log(\"pls\", findFromNotes); // debugger;\n\n        this.setState({\n          allNotes: findFromNotes\n        }, () => {\n          console.log(\"fetchNotes\", this.state.allNotes, userID);\n        });\n      });\n    };\n  }\n\n  render() {\n    console.log(\"AllNotes\", this.props);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Banner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Banner, {\n      title: \"All Notes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(AllNotesFilter, {\n      allBeaches: this.props.allBeaches,\n      allNotes: this.state.allNotes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"AllNote-Container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, this.state.allNotes ? this.renderNoteCards() : null));\n  }\n\n}\n\nexport default AllNotes;","map":{"version":3,"sources":["/Users/cbatsoula/_exp_/waveson/test-waveson-api/client/src/containers/AllNotes.js"],"names":["React","NoteCard","Banner","AllNotesFilter","AllNotes","Component","state","allNotes","renderNoteCards","map","note","allBeaches","id","componentDidMount","console","log","props","userID","currentUser","fetch","then","r","json","stuff","findFromNotes","filter","user_id","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAErCC,KAFqC,GAE7B;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAF6B;;AAAA,SAMrCC,eANqC,GAMnB,MAAM;AACtB,aAAO,KAAKF,KAAL,CAAWC,QAAX,CAAoBE,GAApB,CAAyBC,IAAI,IAAI;AACtC,4BAAO,oBAAC,QAAD;AAAU,UAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWK,UAAjC;AAA6C,UAAA,IAAI,EAAED,IAAnD;AAAyD,UAAA,GAAG,EAAEA,IAAI,CAACE,EAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFM,CAAP;AAGD,KAVoC;;AAAA,SAYrCC,iBAZqC,GAYjB,MAAM;AAExBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKC,KAA/B,EAFwB,CAItB;AACA;AACA;;AACA,UAAIC,MAAM,GAAG,KAAKD,KAAL,CAAWE,WAAX,CAAuBN,EAApC;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBE,MAAtB;AACAE,MAAAA,KAAK,CAAC,YAAD,CAAL,CACGC,IADH,CACSC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADd,EAEGF,IAFH,CAESG,KAAK,IAAI;AACd;AACA;AACA,YAAIC,aAAa,GAAGD,KAAK,CAACE,MAAN,CAAcf,IAAI,IAAI;AACxC,iBAAOA,IAAI,CAACgB,OAAL,KAAiBT,MAAxB;AACD,SAFmB,CAApB;AAGAH,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBS,aAAnB,EANc,CAOd;;AAGA,aAAKG,QAAL,CAAc;AACZpB,UAAAA,QAAQ,EAAEiB;AADE,SAAd,EAEG,MAAM;AAACV,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKT,KAAL,CAAWC,QAArC,EAA+CU,MAA/C;AAAuD,SAFjE;AAID,OAhBH;AAkBH,KAvCoC;AAAA;;AAyCrCW,EAAAA,MAAM,GAAI;AACRd,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKC,KAA7B;AACA,wBACE,uDACA;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADA,eAKA,oBAAC,cAAD;AAAgB,MAAA,UAAU,EAAE,KAAKA,KAAL,CAAWL,UAAvC;AAAmD,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWC,QAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,eAQA;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKD,KAAL,CAAWC,QAAX,GAEA,KAAKC,eAAL,EAFA,GAIA,IANJ,CARA,CADF;AAqBD;;AAhEoC;;AAmEvC,eAAeJ,QAAf","sourcesContent":["import React from 'react';\nimport NoteCard from '../components/NoteCard';\nimport Banner from '../components/Banner';\nimport AllNotesFilter from './AllNotesFilter';\n\nclass AllNotes extends React.Component {\n\n  state = {\n    allNotes: null,\n  }\n\n  renderNoteCards = () => {\n    return this.state.allNotes.map( note => {\n      return <NoteCard allBeaches={this.state.allBeaches} note={note} key={note.id} />\n    })\n  }\n\n  componentDidMount = () => {\n\n    console.log(\"allBeaches\", this.props)\n\n      // let thisOne = this.props.allBeaches.find(beach => {\n      //   return beach.name === this.props.currentBeach.name\n      // })\n      let userID = this.props.currentUser.id\n      console.log(\"userID\", userID)\n      fetch('/api/notes')\n        .then( r => r.json())\n        .then( stuff => {\n          // let findFromNotes = stuff.filter( note => {\n          //   return note.beach_id === thisOne.id && note.user_id === userID})\n          let findFromNotes = stuff.filter( note => {\n            return note.user_id === userID\n          })\n          console.log(\"pls\", findFromNotes)\n          // debugger;\n\n\n          this.setState({\n            allNotes: findFromNotes\n          }, () => {console.log(\"fetchNotes\", this.state.allNotes, userID)})\n\n        })\n\n  }\n\n  render () {\n    console.log(\"AllNotes\", this.props)\n    return (\n      <>\n      <div className=\"Banner\">\n      <Banner title={\"All Notes\"} />\n      </div>\n\n      <AllNotesFilter allBeaches={this.props.allBeaches} allNotes={this.state.allNotes}/>\n\n\n      <div className=\"AllNote-Container\">\n        {\n          this.state.allNotes\n          ?\n          this.renderNoteCards()\n          :\n          null\n        }\n      </div>\n      </>\n\n    )\n  }\n}\n\nexport default AllNotes;\n"]},"metadata":{},"sourceType":"module"}