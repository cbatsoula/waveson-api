{"ast":null,"code":"var _jsxFileName = \"/Users/cbatsoula/_exp_/waveson/test-waveson-api/client/src/containers/AllNotes.js\";\nimport React from 'react';\nimport NoteCard from '../components/NoteCard';\nimport Banner from '../components/Banner';\nimport AllNotesFilter from './AllNotesFilter';\n\nclass AllNotes extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allNotes: null,\n      sortedNotes: null,\n      //filter\n      selectBeach: null\n    };\n\n    this.renderNoteCards = () => {\n      return this.state.allNotes.map(note => {\n        return /*#__PURE__*/React.createElement(NoteCard, {\n          allBeaches: this.props.allBeaches,\n          note: note,\n          key: note.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 14\n          }\n        });\n      });\n    };\n\n    this.componentDidMount = () => {\n      console.log(\"allBeaches\", this.props); // let thisOne = this.props.allBeaches.find(beach => {\n      //   return beach.name === this.props.currentBeach.name\n      // })\n\n      let userID = this.props.currentUser.id;\n      console.log(\"userID\", userID);\n      fetch('/api/notes').then(r => r.json()).then(stuff => {\n        // let findFromNotes = stuff.filter( note => {\n        //   return note.beach_id === thisOne.id && note.user_id === userID})\n        let findFromNotes = stuff.filter(note => {\n          return note.user_id === userID;\n        });\n        console.log(\"pls\", findFromNotes); // debugger;\n\n        this.setState({\n          allNotes: findFromNotes\n        }, () => {\n          console.log(\"fetchNotes\", this.state.allNotes, userID);\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      console.log(\"event\", event.target);\n      this.setState({\n        selectBeach: event.target.value,\n        sortedNotes: null\n      }, () => {\n        console.log(\"handleChange\", this.state);\n      });\n    };\n\n    this.handleSubmit = event => {\n      // alert('Beach selected: ' + this.state.value);\n      event.preventDefault();\n      console.log(\"submit!!\", this.state, this.props); // this.setState({\n      //   selectBeach: event.target.value\n      // });\n\n      let theseNotes = this.state.allNotes.map(note => {\n        if (note.beach_name === this.state.selectBeach) {\n          console.log(\"yah\", note);\n          return note;\n        } else {\n          console.log(\"nah\", note);\n          null;\n        }\n      });\n      console.log(\"theseNotes\", theseNotes, this.state);\n      this.setState({\n        sortedNotes: theseNotes\n      }, () => {\n        this.renderSortedNoteCards();\n      });\n    };\n\n    this.renderSortedNoteCards = () => {\n      return this.state.sortedNotes.map(note => {\n        return /*#__PURE__*/React.createElement(NoteCard, {\n          allBeaches: this.props.allBeaches,\n          note: note,\n          key: note.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 14\n          }\n        });\n      });\n    };\n  }\n\n  render() {\n    console.log(\"AllNotes\", this.props);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Banner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Banner, {\n      title: \"All Notes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(AllNotesFilter, {\n      selectBeach: this.state.selectBeach,\n      allBeaches: this.props.allBeaches,\n      allNotes: this.state.allNotes,\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"AllNote-Container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, this.state.allNotes ? this.renderNoteCards() : this.renderSortedNoteCards()));\n  }\n\n}\n\nexport default AllNotes;","map":{"version":3,"sources":["/Users/cbatsoula/_exp_/waveson/test-waveson-api/client/src/containers/AllNotes.js"],"names":["React","NoteCard","Banner","AllNotesFilter","AllNotes","Component","state","allNotes","sortedNotes","selectBeach","renderNoteCards","map","note","props","allBeaches","id","componentDidMount","console","log","userID","currentUser","fetch","then","r","json","stuff","findFromNotes","filter","user_id","setState","handleChange","event","target","value","handleSubmit","preventDefault","theseNotes","beach_name","renderSortedNoteCards","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport NoteCard from '../components/NoteCard';\nimport Banner from '../components/Banner';\nimport AllNotesFilter from './AllNotesFilter';\n\nclass AllNotes extends React.Component {\n\n  state = {\n    allNotes: null,\n    sortedNotes: null,\n    //filter\n    selectBeach: null,\n\n  }\n\n  renderNoteCards = () => {\n    return this.state.allNotes.map( note => {\n      return <NoteCard allBeaches={this.props.allBeaches} note={note} key={note.id} />\n    })\n  }\n\n  componentDidMount = () => {\n\n    console.log(\"allBeaches\", this.props)\n\n      // let thisOne = this.props.allBeaches.find(beach => {\n      //   return beach.name === this.props.currentBeach.name\n      // })\n      let userID = this.props.currentUser.id\n      console.log(\"userID\", userID)\n      fetch('/api/notes')\n        .then( r => r.json())\n        .then( stuff => {\n          // let findFromNotes = stuff.filter( note => {\n          //   return note.beach_id === thisOne.id && note.user_id === userID})\n          let findFromNotes = stuff.filter( note => {\n            return note.user_id === userID\n          })\n          console.log(\"pls\", findFromNotes)\n          // debugger;\n\n\n          this.setState({\n            allNotes: findFromNotes\n          }, () => {console.log(\"fetchNotes\", this.state.allNotes, userID)})\n\n        })\n\n  }\n\n  handleChange = (event) => {\n    console.log(\"event\", event.target)\n    this.setState({\n      selectBeach: event.target.value,\n      sortedNotes: null,\n    }, () => {console.log(\"handleChange\", this.state)});\n\n  }\n\n  handleSubmit = (event) => {\n    // alert('Beach selected: ' + this.state.value);\n    event.preventDefault();\n    console.log(\"submit!!\", this.state, this.props);\n    // this.setState({\n    //   selectBeach: event.target.value\n    // });\n\n    let theseNotes = this.state.allNotes.map(note => {\n      if (note.beach_name === this.state.selectBeach){\n        console.log(\"yah\", note)\n        return note\n      } else {\n        console.log(\"nah\", note)\n        null\n      }\n    })\n    console.log(\"theseNotes\", theseNotes, this.state)\n\n    this.setState({\n      sortedNotes: theseNotes\n    }, () => {this.renderSortedNoteCards()})\n  }\n\n  renderSortedNoteCards = () => {\n    return this.state.sortedNotes.map( note => {\n      return <NoteCard allBeaches={this.props.allBeaches} note={note} key={note.id} />\n    })\n  }\n\n  render () {\n    console.log(\"AllNotes\", this.props)\n    return (\n      <>\n      <div className=\"Banner\">\n      <Banner title={\"All Notes\"} />\n      </div>\n\n      <AllNotesFilter selectBeach={this.state.selectBeach} allBeaches={this.props.allBeaches} allNotes={this.state.allNotes} handleChange={this.handleChange} handleSubmit={this.handleSubmit}/>\n\n\n      <div className=\"AllNote-Container\">\n        {\n          this.state.allNotes\n          ?\n          this.renderNoteCards()\n          :\n          this.renderSortedNoteCards()\n        }\n      </div>\n      </>\n\n    )\n  }\n}\n\nexport default AllNotes;\n"]},"metadata":{},"sourceType":"module"}