{"ast":null,"code":"var _jsxFileName = \"/Users/cbatsoula/_exp_/waveson/test-waveson-api/client/src/containers/Notes.js\";\nimport React, { useState } from 'react';\nimport NoteCard from '../components/NoteCard';\nimport Banner from '../components/Banner';\nimport AllNotesFilter from './AllNotesFilter';\nimport AllNotes from './AllNotes';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from 'moment';\n\nclass Notes extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allNotes: null,\n      sortedNotes: null,\n      //filter\n      selectBeach: null,\n      toggle: false,\n      // selectTime: null,\n      startDate: new Date(),\n      endDate: new Date()\n    };\n\n    this.renderNoteCards = () => {\n      if (this.state.allNotes && this.state.selectBeach === \"All\") {\n        return this.state.allNotes.map(note => {\n          return /*#__PURE__*/React.createElement(NoteCard, {\n            allBeaches: this.props.allBeaches,\n            note: note,\n            key: note.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 16\n            }\n          });\n        });\n      }\n    };\n\n    this.componentDidMount = () => {\n      console.log(\"allBeaches\", this.props); // let thisOne = this.props.allBeaches.find(beach => {\n      //   return beach.name === this.props.currentBeach.name\n      // })\n\n      let userID = this.props.currentUser.id;\n      console.log(\"userID\", userID);\n      fetch('/api/notes').then(r => r.json()).then(stuff => {\n        // let findFromNotes = stuff.filter( note => {\n        //   return note.beach_id === thisOne.id && note.user_id === userID})\n        let findFromNotes = stuff.filter(note => {\n          return note.user_id === userID;\n        });\n        console.log(\"pls\", findFromNotes); // debugger;\n\n        this.setState({\n          allNotes: findFromNotes\n        }, () => {\n          console.log(\"fetchNotes\", this.state.allNotes, userID);\n        });\n      });\n    };\n\n    this.handleBeachChange = event => {\n      console.log(\"event\", event.target);\n      this.setState({\n        selectBeach: event.target.value,\n        sortedNotes: null,\n        toggle: false\n      }, () => {\n        console.log(\"handleChange\", this.state);\n      });\n    };\n\n    this.begForMe = () => {\n      // yes I was listening to Korn and sometimes making more names for variables and functions is hard\n      let filterNotes = [];\n      console.log(\"be there for me\", this.state, \"you're the crowd come on give it back to me\", this.props, \"beg for me, be there for me\", this.state.startDate.toLocaleDateString('en-US'));\n      let formatDate = this.state.startDate.toLocaleDateString('en-US');\n      let notes = this.state.allNotes.map(note => {\n        if (note.created_at) {\n          // console.log(\"will THIS WORK????\", note.created_at.toLocaleDateString('en-US'), note)\n          let wut = moment(note.created_at, 'DD/MM/YYYY').format();\n          console.log(\"wut\", wut, note.created_at);\n          filterNotes.push(note);\n        }\n      });\n      console.log(\"begForMe: filterNotes\", filterNotes);\n    };\n\n    this.handleStartChange = date => {\n      console.log(\"incoming date\", date);\n      this.setState({\n        startDate: date\n      }, () => {\n        this.begForMe();\n        console.log(\"handleDateChange SET\", this.state.startDate);\n      }); // let notes = this.state.allNotes.map( note => {\n      //   return note.created_at\n      // })\n    };\n\n    this.handleEndChange = date => {\n      this.setState({\n        endDate: date\n      }, () => {\n        console.log(\"end change\", this.state);\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      console.log(\"submit!!\", this.state, this.props);\n      let holdMe = [];\n      let theseNotes = this.state.allNotes.map(note => {\n        switch (expression) {\n          case x:\n            //\n            break;\n\n          case y:\n            //\n            break;\n\n          default: //\n\n        }\n\n        if (this.state.selectBeach === \"All\") {\n          let allNotes = this.state.allNotes;\n          console.log(\"allNotes\", allNotes);\n          this.setState({\n            sortedNotes: allNotes\n          }, () => {\n            console.log(\"All!!\", this.state);\n          });\n        } else if (note.beach_name === this.state.selectBeach) {\n          console.log(\"if\", note);\n          holdMe.push(note);\n          console.log(\"holdMe\", holdMe);\n          return note;\n        } else if (this.state.startDate && this.state.endDate) {\n          console.log(\"else if\", this.state);\n          let formatDate = note.created_at.split(\"T\");\n          let justDate = formatDate.shift();\n          console.log(\"and we have \", justDate);\n\n          var format = function (input) {\n            var array = (input || '').toString().split(/\\-/g);\n            array.push(array.shift());\n            return array.join('/') || null;\n          }; //compare the date with justDate, if justDate fitz within the zone then holdMe.push(note)\n\n\n          console.log(\"LETS DO THIS NOW MERCY I CAN NOT ALLOW LETS DO THIS NOW\");\n          console.log(\"format!!!!!!!\", format(justDate));\n          console.log(format('2000-12-01'));\n          debugger;\n        } else {\n          console.log(\"nah\", note);\n        }\n      });\n      console.log(\"theseNotes\", theseNotes, this.state, holdMe);\n      this.setState({\n        sortedNotes: holdMe,\n        toggle: true\n      });\n    };\n\n    this.renderSortedNoteCards = () => {\n      if (this.state.sortedNotes.length > 0) {\n        return this.state.sortedNotes.map(note => {\n          return /*#__PURE__*/React.createElement(NoteCard, {\n            allBeaches: this.props.allBeaches,\n            note: note,\n            key: note.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 16\n            }\n          });\n        });\n      } else if (this.state.allNotes && this.state.selectBeach === \"all\") {\n        return this.state.allNotes.map(note => {\n          return /*#__PURE__*/React.createElement(NoteCard, {\n            allBeaches: this.props.allBeaches,\n            note: note,\n            key: note.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 18\n            }\n          });\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 14\n          }\n        }, \" No notes for the selected parameters \");\n      }\n    };\n\n    this.setStartDate = () => {\n      const [startDate, setStartDate] = useState(new Date());\n    };\n\n    this.setEndDate = () => {\n      const [endDate, setEndDate] = useState(new Date());\n    };\n  }\n\n  render() {\n    console.log(\"Notes\", this.state);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Banner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Banner, {\n      title: \"All Notes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(AllNotesFilter, {\n      selectBeach: this.state.selectBeach,\n      allBeaches: this.props.allBeaches,\n      allNotes: this.state.allNotes,\n      handleBeachChange: this.handleBeachChange,\n      handleSubmit: this.handleSubmit,\n      handleDateChange: this.handleDateChange,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n      handleStartChange: this.handleStartChange,\n      handleEndChange: this.handleEndChange,\n      setEndDate: this.setEndDate,\n      setStartDate: this.setStartDate,\n      minDate: this.state.startDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Note-Container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 7\n      }\n    }, this.state.toggle ? /*#__PURE__*/React.createElement(AllNotes, {\n      selectBeach: this.state.selectBeach,\n      allNotes: this.state.allNotes,\n      sortedNotes: this.state.sortedNotes,\n      renderNoteCards: this.renderNoteCards,\n      renderSortedNoteCards: this.renderSortedNoteCards,\n      toggle: this.state.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(AllNotes, {\n      selectBeach: this.state.selectBeach,\n      allNotes: this.state.allNotes,\n      sortedNotes: this.state.sortedNotes,\n      renderNoteCards: this.renderNoteCards,\n      renderSortedNoteCards: this.renderSortedNoteCards,\n      toggle: this.state.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Notes;","map":{"version":3,"sources":["/Users/cbatsoula/_exp_/waveson/test-waveson-api/client/src/containers/Notes.js"],"names":["React","useState","NoteCard","Banner","AllNotesFilter","AllNotes","DatePicker","moment","Notes","Component","state","allNotes","sortedNotes","selectBeach","toggle","startDate","Date","endDate","renderNoteCards","map","note","props","allBeaches","id","componentDidMount","console","log","userID","currentUser","fetch","then","r","json","stuff","findFromNotes","filter","user_id","setState","handleBeachChange","event","target","value","begForMe","filterNotes","toLocaleDateString","formatDate","notes","created_at","wut","format","push","handleStartChange","date","handleEndChange","handleSubmit","preventDefault","holdMe","theseNotes","expression","x","y","beach_name","split","justDate","shift","input","array","toString","join","renderSortedNoteCards","length","setStartDate","setEndDate","render","handleDateChange"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport NoteCard from '../components/NoteCard';\nimport Banner from '../components/Banner';\nimport AllNotesFilter from './AllNotesFilter';\nimport AllNotes from './AllNotes';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from 'moment';\n\nclass Notes extends React.Component {\n\n  state = {\n    allNotes: null,\n    sortedNotes: null,\n    //filter\n    selectBeach: null,\n    toggle: false,\n    // selectTime: null,\n    startDate: new Date(),\n    endDate: new Date(),\n\n  }\n\n  renderNoteCards = () => {\n    if (this.state.allNotes && this.state.selectBeach === \"All\") {\n      return this.state.allNotes.map( note => {\n        return <NoteCard allBeaches={this.props.allBeaches} note={note} key={note.id} />\n      })\n\n    }\n  }\n\n  componentDidMount = () => {\n\n    console.log(\"allBeaches\", this.props)\n\n      // let thisOne = this.props.allBeaches.find(beach => {\n      //   return beach.name === this.props.currentBeach.name\n      // })\n      let userID = this.props.currentUser.id\n      console.log(\"userID\", userID)\n      fetch('/api/notes')\n        .then( r => r.json())\n        .then( stuff => {\n          // let findFromNotes = stuff.filter( note => {\n          //   return note.beach_id === thisOne.id && note.user_id === userID})\n          let findFromNotes = stuff.filter( note => {\n            return note.user_id === userID\n          })\n          console.log(\"pls\", findFromNotes)\n          // debugger;\n\n\n          this.setState({\n            allNotes: findFromNotes\n          }, () => {console.log(\"fetchNotes\", this.state.allNotes, userID)})\n\n        })\n\n  }\n\n  handleBeachChange = (event) => {\n    console.log(\"event\", event.target)\n    this.setState({\n      selectBeach: event.target.value,\n      sortedNotes: null,\n      toggle: false,\n    }, () => {console.log(\"handleChange\", this.state)});\n\n  }\n\n  begForMe = () => {\n    // yes I was listening to Korn and sometimes making more names for variables and functions is hard\n    let filterNotes = []\n    console.log(\"be there for me\", this.state, \"you're the crowd come on give it back to me\", this.props, \"beg for me, be there for me\", this.state.startDate.toLocaleDateString('en-US'))\n\n    let formatDate = this.state.startDate.toLocaleDateString('en-US')\n\n    let notes = this.state.allNotes.map( note => {\n      if (note.created_at) {\n        // console.log(\"will THIS WORK????\", note.created_at.toLocaleDateString('en-US'), note)\n        let wut = moment(note.created_at, 'DD/MM/YYYY').format()\n        console.log(\"wut\", wut, note.created_at)\n        filterNotes.push(note)\n      }\n\n    })\n    console.log(\"begForMe: filterNotes\", filterNotes)\n  }\n\n  handleStartChange = date => {\n    console.log(\"incoming date\", date)\n    this.setState({\n      startDate: date\n    }, () => {this.begForMe();\n      console.log(\"handleDateChange SET\", this.state.startDate)});\n\n    // let notes = this.state.allNotes.map( note => {\n    //   return note.created_at\n    // })\n\n\n\n  };\n\n  handleEndChange = date => {\n    this.setState({\n      endDate: date\n    }, () => {console.log(\"end change\", this.state)})\n  }\n\n\n  //upon submit, i want to setState for the array of notes to pass down as props to AllNotes\n  //within AllNotes I want to map over each note and spit out a NoteCard comp. for each one. within this I should make an, if the case is \"All\" to map and return NoteCards, else, map and render sortedNotes as NoteCards\n\n\n  handleSubmit = (event) => {\n\n    event.preventDefault();\n    console.log(\"submit!!\", this.state, this.props);\n\n    let holdMe = []\n    let theseNotes = this.state.allNotes.map(note => {\n\n      switch (expression) {\n        case x:\n        //\n        break;\n        case y:\n        //\n        break;\n        default:\n        //\n      }\n\n      if (this.state.selectBeach === \"All\"){\n        let allNotes = this.state.allNotes\n        console.log(\"allNotes\", allNotes)\n        this.setState({\n          sortedNotes: allNotes,\n        }, () => {console.log(\"All!!\", this.state)})\n\n      } else if (note.beach_name === this.state.selectBeach) {\n        console.log(\"if\", note)\n        holdMe.push(note)\n        console.log(\"holdMe\", holdMe)\n        return note\n      } else if (this.state.startDate && this.state.endDate){\n        console.log(\"else if\", this.state)\n        let formatDate = note.created_at.split(\"T\")\n        let justDate = formatDate.shift()\n\n        console.log(\"and we have \", justDate)\n        var format = function(input) {\n          var array = (input || '').toString().split(/\\-/g);\n          array.push(array.shift());\n          return array.join('/') || null;\n        };\n\n        //compare the date with justDate, if justDate fitz within the zone then holdMe.push(note)\n        console.log(\"LETS DO THIS NOW MERCY I CAN NOT ALLOW LETS DO THIS NOW\")\n        console.log(\"format!!!!!!!\", format(justDate));\n        console.log(format('2000-12-01'));\n\n        debugger;\n\n\n      } else {\n          console.log(\"nah\", note)\n        }\n      })\n      console.log(\"theseNotes\", theseNotes, this.state, holdMe)\n\n      this.setState({\n        sortedNotes: holdMe,\n        toggle: true,\n      })\n\n    }\n\n  renderSortedNoteCards = () => {\n    if (this.state.sortedNotes.length > 0) {\n      return this.state.sortedNotes.map( note => {\n        return <NoteCard allBeaches={this.props.allBeaches} note={note} key={note.id} />\n      })\n    } else if (this.state.allNotes && this.state.selectBeach === \"all\") {\n        return this.state.allNotes.map( note => {\n          return <NoteCard allBeaches={this.props.allBeaches} note={note} key={note.id} />\n        })\n\n      } else {\n      return <h3> No notes for the selected parameters </h3>\n    }\n  }\n\n\n  setStartDate = () => {\n    const [startDate, setStartDate] = useState(new Date());\n\n  };\n\n  setEndDate = () => {\n    const [endDate, setEndDate] = useState(new Date());\n  }\n\n  render () {\n    console.log(\"Notes\", this.state)\n    return (\n      <>\n      <div className=\"Banner\">\n      <Banner title={\"All Notes\"} />\n      </div>\n\n      <AllNotesFilter\n      selectBeach={this.state.selectBeach}\n      allBeaches={this.props.allBeaches}\n      allNotes={this.state.allNotes}\n      handleBeachChange={this.handleBeachChange}\n      handleSubmit={this.handleSubmit}\n      handleDateChange={this.handleDateChange}\n\n      startDate={this.state.startDate}\n      endDate={this.state.endDate}\n      handleStartChange={this.handleStartChange}\n      handleEndChange={this.handleEndChange}\n      setEndDate={this.setEndDate}\n      setStartDate={this.setStartDate}\n      minDate={this.state.startDate}\n      />\n\n\n      <div className=\"Note-Container\">\n\n        {\n          this.state.toggle\n          ?\n          <AllNotes\n          selectBeach={this.state.selectBeach}\n          allNotes={this.state.allNotes}\n          sortedNotes={this.state.sortedNotes}\n          renderNoteCards={this.renderNoteCards}\n          renderSortedNoteCards={this.renderSortedNoteCards}\n          toggle={this.state.toggle}  />\n          :\n          <AllNotes\n          selectBeach={this.state.selectBeach}\n          allNotes={this.state.allNotes}\n          sortedNotes={this.state.sortedNotes}\n          renderNoteCards={this.renderNoteCards}\n          renderSortedNoteCards={this.renderSortedNoteCards}\n          toggle={this.state.toggle} />\n\n        }\n      </div>\n      </>\n\n    )\n  }\n}\n\nexport default Notes;\n"]},"metadata":{},"sourceType":"module"}