{"ast":null,"code":"var _jsxFileName = \"/Users/cbatsoula/_exp_/test-waveson-client/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Nav from './components/Nav';\nimport MainContainer from './containers/MainContainer';\nimport SignUp from './containers/SignUp';\nimport Login from './containers/Login';\nimport Show from './containers/Show';\nimport Map from './components/Map';\nimport AllNotes from './containers/AllNotes'; // import { Link } from 'react-router-dom';\n//find exactly what headers google wants to fully fix this\n// const API = `https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${userLat},${userLng}&radius=20000&type=natural_feature&keyword=beach&key=AIzaSyDA0kZdff9Oi6T6PM7nKwVG92c3uELsbRE`\n\nconst API_KEY = \"\".concat(process.env.REACT_APP_GOOGLE_API_KEY);\n\nlet animateButton = e => {\n  e.preventDefault; //reset animation\n\n  e.target.classList.remove('animate');\n  e.target.classList.add('animate');\n  setTimeout(function () {\n    e.target.classList.remove('animate');\n  }, 700);\n};\n\nvar bubblyButtons = document.getElementsByClassName(\"bubbly-button\");\n\nfor (var i = 0; i < bubblyButtons.length; i++) {\n  bubblyButtons[i].addEventListener('click', animateButton, false);\n}\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      beachData: [],\n      userLoc: {},\n      currentUser: null,\n      currentBeach: null,\n      allBeaches: [],\n      beachSaveData: null,\n      allNotes: null\n    };\n\n    this.fetchNotes = () => {\n      // let thisOne = this.state.allBeaches.find(beach => {\n      //   return beach.name === this.state.currentBeach.name\n      // })\n      // let userID = this.state.currentUser.id\n      fetch('http://localhost:3000/notes').then(r => r.json()).then(stuff => {\n        // let findFromNotes = stuff.filter( note => {\n        //   return note.beach_id === thisOne.id && note.user_id === userID})\n        // console.log(\"pls\", findFromNotes)\n        // debugger;\n        this.setState({\n          allNotes: stuff\n        });\n      });\n    };\n\n    this.selectBeach = propsName => {\n      console.log(\"HELL YEAH\", propsName);\n      console.log(\"why\", this.state);\n      let selectedBeach = this.state.beachData.results.find(beach => {\n        return beach.name === propsName;\n      });\n      this.setState({\n        currentBeach: selectedBeach\n      }, () => {\n        this.props.history.push('/beach');\n      });\n    };\n\n    this.signUpUser = input => {\n      if (input.password === input.passwordConfirmation) {\n        fetch('http://localhost:3000/signup', {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          body: JSON.stringify({\n            name: input.name,\n            username: input.username,\n            password: input.password\n          })\n        }).then(r => r.json()).then(response => {\n          if (response.errors) {\n            alert(response.errors);\n          } else {\n            // this.setState({\n            //   currentUser: {...response},\n            // })\n            this.setUser(response);\n          }\n        });\n      } else {\n        alert(\"Passwords don't match!\");\n      }\n    };\n\n    this.loginUser = input => {\n      fetch('http://localhost:3000/login', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": 'application/json',\n          \"Accept\": 'application/json'\n        },\n        body: JSON.stringify({\n          username: input.username,\n          password: input.password\n        })\n      }).then(resp => resp.json()).then(response => {\n        if (response.errors) {\n          alert(response.errors);\n        } else {\n          this.setState({\n            currentUser: response // loading: false\n\n          }, () => {\n            this.props.history.push('/home');\n          });\n        }\n      });\n    };\n\n    this.setUser = response => {\n      this.setState({\n        currentUser: response\n      }, () => {\n        // console.log(\"THIS!!!!!\", this.props)\n        // localStorage.token = response.token\n        this.props.history.push(\"/home\");\n      });\n    };\n\n    this.holdThis = () => {// {\n      //   this.state.currentBeach\n      //   ?\n      //   <Show currentBeach={this.state.currentBeach}/>\n      //   :\n      //   this.hideNseek()\n      // }\n    };\n\n    this.logout = () => {\n      this.setState({\n        currentUser: null\n      });\n      this.props.history.push(\"/login\");\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://www.googleapis.com/geolocation/v1/geolocate?key=\".concat(API_KEY), {\n      method: \"POST\"\n    }).then(r => r.json()).then(data => {\n      console.log(process.env.REACT_APP_GOOGLE_API_KEY);\n      this.setState({\n        userLoc: data.location\n      }, () => {\n        this.beachesFromUserLoc();\n      });\n    });\n    fetch('http://localhost:3000/beaches').then(r => r.json()).then(allBeaches => {\n      this.setState({\n        allBeaches: allBeaches\n      });\n    });\n    fetch('http://localhost:3000/favs').then(r => r.json()).then(data => {\n      // console.log(\"wtf my dude\", data)\n      this.setState({\n        beachSaveData: data\n      });\n    });\n    fetch('http://localhost:3000/notes').then(r => r.json()).then(stuff => {\n      // let findFromNotes = stuff.filter( note => {\n      //   return note.beach_id === thisOne.id && note.user_id === userID})\n      // console.log(\"pls\", findFromNotes)\n      // debugger;\n      this.setState({\n        allNotes: stuff\n      });\n    });\n  }\n\n  beachesFromUserLoc() {\n    let userLat = this.state.userLoc.lat.toString();\n    let userLng = this.state.userLoc.lng.toString(); // fetch('http://localhost:3000/users/1', {\n    //   method: \"PATCH\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //     \"Accept\": \"application/json\",\n    //     'Access-Control-Allow-Origin': '*'\n    //   },\n    //   body: JSON.stringify({\n    //     location: this.state.userLoc\n    //   })\n    // })\n    //   .then(r => r.json())\n    //   .then(data => {\n    //     console.log(\"patch location\", data)\n    //   })\n    //\n    // console.log(\"uh\", userLat, userLng)\n\n    fetch(\"https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=\".concat(userLat, \",\").concat(userLng, \"&radius=21000&type=natural_feature&keyword=beach&key=\").concat(API_KEY), {\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(r => r.json()).then(data => {\n      this.setState({\n        beachData: data\n      }, () => {\n        this.postBeaches();\n      });\n    });\n  }\n\n  postBeaches() {\n    // let beachLat = this.state.beachData.results.map(beach => {\n    //   return beach.geometry.location.lat.toString()\n    // })\n    // let beachLng = this.state.beachData.results.map(beach => {\n    //   return beach.geometry.location.lng.toString()\n    // })\n    // let beachIndex = this.state.beachData.results.map((beach, index) => {\n    //   return index + 1\n    // })\n    // console.log(\"post beaches\", beachLat, beachIndex)\n    this.state.beachData.results.map(beach => {\n      return fetch('http://localhost:3000/beaches', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\" // 'Access-Control-Allow-Origin': '*'\n\n        },\n        body: JSON.stringify({\n          name: beach.name,\n          lat: beach.geometry.location.lat,\n          vicinity: beach.vicinity,\n          lng: beach.geometry.location.lng\n        })\n      }).then(r => r.json()).then(console.log);\n    });\n  }\n\n  hideNseek() {\n    if (!this.state.beachData.results) {\n      console.log(\"not yet\", this.state);\n    } else if (this.state.currentBeach) {\n      return React.createElement(Route, {\n        path: \"/beach\",\n        render: routerProps => React.createElement(Show, {\n          currentBeach: this.state.currentBeach,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      });\n    } // else if (this.state.beachData.results.length > 1) {\n    //   console.log(\"HIDE AND SEEK\", this.state.beachData.results.length)\n    //   return <Route path='/home' render={(routerProps) => <MainContainer selectBeach={this.selectBeach} beachData={this.state.beachData.results} />} />\n    //\n    // }\n\n  }\n\n  render() {\n    console.log(\"app\", this.state); // console.log(\"beach info\", this.state.beachData.results)\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      logout: this.logout,\n      currentUser: this.state.currentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/signup\",\n      render: () => React.createElement(SignUp, {\n        setUser: this.setUser,\n        signUpUser: this.signUpUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      render: routerProps => React.createElement(Login, Object.assign({}, routerProps, {\n        loginUser: this.loginUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/map\",\n      component: Map,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/beach\",\n      render: routerProps => React.createElement(Show, Object.assign({}, routerProps, {\n        currentBeach: this.state.currentBeach,\n        currentUser: this.state.currentUser,\n        allBeaches: this.state.allBeaches,\n        beachSaveData: this.state.beachSaveData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/notes\",\n      render: routerProps => React.createElement(AllNotes, Object.assign({}, routerProps, {\n        fetchNotes: this.fetchNotes,\n        currentUser: this.state.currentUser,\n        allNotes: this.state.allNotes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/home\",\n      render: routerProps => React.createElement(MainContainer, Object.assign({}, routerProps, {\n        selectBeach: this.selectBeach,\n        beachData: this.state.beachData.results,\n        allBeaches: this.state.allBeaches,\n        beachSaveData: this.state.beachSaveData,\n        currentUser: this.state.currentUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cbatsoula/_exp_/test-waveson-client/src/App.js"],"names":["React","BrowserRouter","Router","Route","Switch","Nav","MainContainer","SignUp","Login","Show","Map","AllNotes","API_KEY","process","env","REACT_APP_GOOGLE_API_KEY","animateButton","e","preventDefault","target","classList","remove","add","setTimeout","bubblyButtons","document","getElementsByClassName","i","length","addEventListener","App","Component","state","beachData","userLoc","currentUser","currentBeach","allBeaches","beachSaveData","allNotes","fetchNotes","fetch","then","r","json","stuff","setState","selectBeach","propsName","console","log","selectedBeach","results","find","beach","name","props","history","push","signUpUser","input","password","passwordConfirmation","method","headers","body","JSON","stringify","username","response","errors","alert","setUser","loginUser","resp","holdThis","logout","componentDidMount","data","location","beachesFromUserLoc","userLat","lat","toString","userLng","lng","postBeaches","map","geometry","vicinity","hideNseek","routerProps","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport Nav from './components/Nav';\nimport MainContainer from './containers/MainContainer';\nimport SignUp from './containers/SignUp';\nimport Login from './containers/Login';\nimport Show from './containers/Show';\nimport Map from './components/Map';\nimport AllNotes from './containers/AllNotes';\n\n\n// import { Link } from 'react-router-dom';\n  //find exactly what headers google wants to fully fix this\n  // const API = `https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${userLat},${userLng}&radius=20000&type=natural_feature&keyword=beach&key=AIzaSyDA0kZdff9Oi6T6PM7nKwVG92c3uELsbRE`\n  const API_KEY = `${process.env.REACT_APP_GOOGLE_API_KEY}`\n\n  let animateButton = (e) => {\n\n    e.preventDefault;\n    //reset animation\n    e.target.classList.remove('animate');\n\n    e.target.classList.add('animate');\n    setTimeout(function(){\n      e.target.classList.remove('animate');\n    },700);\n  };\n\n  var bubblyButtons = document.getElementsByClassName(\"bubbly-button\");\n\n  for (var i = 0; i < bubblyButtons.length; i++) {\n    bubblyButtons[i].addEventListener('click', animateButton, false);\n  }\n\nclass App extends React.Component {\n\n  state = {\n    beachData: [],\n    userLoc: {},\n    currentUser: null,\n    currentBeach: null,\n    allBeaches: [],\n    beachSaveData: null,\n    allNotes: null,\n  }\n\n\n  fetchNotes = () => {\n    // let thisOne = this.state.allBeaches.find(beach => {\n    //   return beach.name === this.state.currentBeach.name\n    // })\n    // let userID = this.state.currentUser.id\n    fetch('http://localhost:3000/notes')\n      .then( r => r.json())\n      .then( stuff => {\n        // let findFromNotes = stuff.filter( note => {\n        //   return note.beach_id === thisOne.id && note.user_id === userID})\n        // console.log(\"pls\", findFromNotes)\n        // debugger;\n\n        this.setState({\n          allNotes: stuff\n        })\n\n      })\n  }\n\n  selectBeach = (propsName) => {\n    console.log(\"HELL YEAH\", propsName)\n    console.log(\"why\", this.state)\n    let selectedBeach = this.state.beachData.results.find(beach => {\n      return beach.name === propsName\n    })\n    this.setState({\n      currentBeach: selectedBeach\n    }, () => {this.props.history.push('/beach')})\n\n  }\n\n  componentDidMount() {\n\n    fetch(`https://www.googleapis.com/geolocation/v1/geolocate?key=${API_KEY}`, {\n      method: \"POST\"\n    })\n      .then(r => r.json())\n      .then(data => {\n        console.log(process.env.REACT_APP_GOOGLE_API_KEY)\n        this.setState({\n          userLoc: data.location\n        }, () => {this.beachesFromUserLoc()})\n      })\n    fetch('http://localhost:3000/beaches')\n      .then( r => r.json())\n      .then( allBeaches => {\n        this.setState({\n          allBeaches: allBeaches\n        })\n      })\n    fetch('http://localhost:3000/favs')\n      .then( r => r.json())\n      .then( data => {\n          // console.log(\"wtf my dude\", data)\n        this.setState({\n          beachSaveData: data\n        })\n      })\n    fetch('http://localhost:3000/notes')\n      .then( r => r.json())\n      .then( stuff => {\n          // let findFromNotes = stuff.filter( note => {\n          //   return note.beach_id === thisOne.id && note.user_id === userID})\n          // console.log(\"pls\", findFromNotes)\n          // debugger;\n\n        this.setState({\n          allNotes: stuff\n        })\n\n      })\n  }\n\n  beachesFromUserLoc() {\n    let userLat = this.state.userLoc.lat.toString()\n    let userLng = this.state.userLoc.lng.toString()\n    // fetch('http://localhost:3000/users/1', {\n    //   method: \"PATCH\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //     \"Accept\": \"application/json\",\n    //     'Access-Control-Allow-Origin': '*'\n    //   },\n    //   body: JSON.stringify({\n    //     location: this.state.userLoc\n    //   })\n    // })\n    //   .then(r => r.json())\n    //   .then(data => {\n    //     console.log(\"patch location\", data)\n    //   })\n    //\n    // console.log(\"uh\", userLat, userLng)\n    fetch(`https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${userLat},${userLng}&radius=21000&type=natural_feature&keyword=beach&key=${API_KEY}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      },\n    })\n      .then(r => r.json())\n      .then(data => {\n        this.setState({\n          beachData: data\n        }, () => {this.postBeaches()})\n      })\n  }\n\n  postBeaches() {\n    // let beachLat = this.state.beachData.results.map(beach => {\n    //   return beach.geometry.location.lat.toString()\n    // })\n    // let beachLng = this.state.beachData.results.map(beach => {\n    //   return beach.geometry.location.lng.toString()\n    // })\n    // let beachIndex = this.state.beachData.results.map((beach, index) => {\n    //   return index + 1\n    // })\n    // console.log(\"post beaches\", beachLat, beachIndex)\n\n\n    this.state.beachData.results.map(beach => {\n      return fetch('http://localhost:3000/beaches', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        // 'Access-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify({\n        name: beach.name,\n        lat: beach.geometry.location.lat,\n        vicinity: beach.vicinity,\n        lng: beach.geometry.location.lng\n      })\n    })\n      .then(r => r.json())\n      .then(console.log)\n    })\n  }\n\n  signUpUser = (input) => {\n    if (input.password === input.passwordConfirmation) {\n      fetch('http://localhost:3000/signup', {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          name: input.name,\n          username: input.username,\n          password: input.password\n        })\n      })\n      .then(r => r.json())\n      .then(response => {\n        if (response.errors){\n          alert(response.errors)\n        } else {\n          // this.setState({\n          //   currentUser: {...response},\n          // })\n          this.setUser(response)\n        }\n      })\n    } else {\n      alert(\"Passwords don't match!\")\n    }\n\n  }\n\n  hideNseek() {\n    if (!this.state.beachData.results) {\n      console.log(\"not yet\", this.state)\n    } else if (this.state.currentBeach) {\n      return <Route path='/beach' render={(routerProps) => <Show currentBeach={this.state.currentBeach}/>} />\n\n    }\n    // else if (this.state.beachData.results.length > 1) {\n    //   console.log(\"HIDE AND SEEK\", this.state.beachData.results.length)\n    //   return <Route path='/home' render={(routerProps) => <MainContainer selectBeach={this.selectBeach} beachData={this.state.beachData.results} />} />\n    //\n    // }\n  }\n\n  loginUser = (input) => {\n    fetch('http://localhost:3000/login', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": 'application/json',\n        \"Accept\": 'application/json'\n      },\n      body: JSON.stringify({\n        username: input.username,\n        password: input.password\n      })\n    })\n    .then(resp => resp.json())\n    .then(response => {\n      if (response.errors) {\n        alert(response.errors)\n      } else {\n        this.setState({\n          currentUser: response,\n          // loading: false\n        }, () => {this.props.history.push('/home')})\n      }\n    })\n  }\n\n  setUser = (response) => {\n    this.setState({\n      currentUser: response\n    }, () => {\n      // console.log(\"THIS!!!!!\", this.props)\n      // localStorage.token = response.token\n      this.props.history.push(\"/home\")\n    })\n  }\n\n  holdThis = () => {\n    // {\n    //   this.state.currentBeach\n    //   ?\n    //   <Show currentBeach={this.state.currentBeach}/>\n    //   :\n    //   this.hideNseek()\n    // }\n  }\n\n  logout = () => {\n    this.setState({\n      currentUser: null\n    })\n    this.props.history.push(\"/login\")\n   }\n\n\n\n  render() {\n    console.log(\"app\", this.state)\n    // console.log(\"beach info\", this.state.beachData.results)\n    return (\n\n        <div className=\"App\">\n          <Nav logout={this.logout} currentUser={this.state.currentUser} />\n\n          <Switch>\n\n            <Route path='/signup' render={() => <SignUp setUser={this.setUser} signUpUser={this.signUpUser}/>} />\n            <Route path=\"/login\" render={(routerProps) => <Login {...routerProps} loginUser={this.loginUser}/>} />\n            <Route path='/map' component={Map} />\n            <Route path='/beach' render={(routerProps) => <Show {...routerProps} currentBeach={this.state.currentBeach} currentUser={this.state.currentUser} allBeaches={this.state.allBeaches} beachSaveData={this.state.beachSaveData}/>} />\n\n            <Route path=\"/notes\" render={(routerProps) => <AllNotes {...routerProps} fetchNotes={this.fetchNotes} currentUser={this.state.currentUser} allNotes={this.state.allNotes} />} />\n\n          </Switch>\n          <Route exact path='/home' render={(routerProps) => <MainContainer {...routerProps} selectBeach={this.selectBeach} beachData={this.state.beachData.results} allBeaches={this.state.allBeaches} beachSaveData={this.state.beachSaveData} currentUser={this.state.currentUser} />} />\n\n        </div>\n\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}